# GitHub Workflow for Building and Releasing the AiDA IDA Pro Plugin

name: Build and Release

# This workflow is triggered whenever a new tag starting with 'v' is pushed.
# This is the standard practice for versioning and releasing.
on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    # The workflow will run on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    permissions:
      contents: write # This permission is required to create a release and upload assets.

    steps:
      # Step 1: Check out the repository's code.
      # We also need to fetch the submodules (like ida-cmake) for the build to work.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # Step 2: Set up build environment.
      # Install required dependencies for building the IDA plugin.
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git wget tar libssl-dev
          # Install CMake 3.27+ from official binaries
          wget -qO- "https://cmake.org/files/v3.27/cmake-3.27.1-linux-x86_64.tar.gz" | sudo tar --strip-components=1 -xz -C /usr/local

      # Step 3: Download and set up IDA SDK.
      # Clone the IDA SDK which is required for building IDA plugins.
      - name: Setup IDA SDK
        run: |
          git clone --depth 1 https://github.com/HexRaysSA/ida-sdk.git /tmp/idasdk
          echo "IDASDK=/tmp/idasdk" >> $GITHUB_ENV

      # Step 4: Configure CMake build.
      # Set up the build directory and configure the project with CMake.
      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release

      # Step 5: Build the plugin.
      # Compile the AiDA plugin using CMake.
      - name: Build plugin
        run: |
          cd build
          cmake --build . --config Release

      # Step 6: Create a directory to store the build artifact.
      # This keeps the workspace clean and provides a predictable location for the compiled plugin.
      - name: Create artifact directory
        run: mkdir -p artifacts

      # Step 7: Copy the compiled plugin to artifacts directory.
      # The CMake build outputs the plugin to the IDA SDK plugins directory.
      - name: Copy plugin artifact
        run: |
          find /tmp/idasdk/src/bin/plugins/ -name "aida.so" -exec cp {} artifacts/ \;

      # Step 8: Create a GitHub Release.
      # This action creates a new release on GitHub, using the tag name for the release title.
      # The `draft: true` flag means the release will be created as a draft, allowing you
      # to review it and add release notes before publishing it.
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/aida.so # This attaches the aida.so file to the release.
          draft: true # Creates a draft release. Set to false to publish automatically.
          generate_release_notes: true # Automatically generates release notes from commits.